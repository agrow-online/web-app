// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum Unit {
  ML
  L
  G
  KG
  ITEM
}

model Business {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name     String
  location String
  isActive Boolean

  user   User   @relation(name: "Owner", fields: [userId], references: [id])
  userId String @unique @db.Uuid

  employees User[] @relation(name: "Employees")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("businesses")
}

model User {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  email     String @unique
  firstName String @default("")
  lastName  String @default("")

  role                Role
  business            Business? @relation(name: "Owner")
  businessId          String?   @db.Uuid
  belongsToBusiness   Business? @relation(name: "Employees", fields: [belongsToBusinessId], references: [id])
  belongsToBusinessId String?   @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("users")
}

model Product {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name        String @unique
  description String @default("")
  image       String @default("")

  brand         ProductBrand       @relation(fields: [brandId], references: [id])
  brandId       String             @db.Uuid
  category      ProductCategory    @relation(fields: [categoryId], references: [id])
  categoryId    String             @db.Uuid
  subCategory   ProductSubCategory @relation(fields: [subCategoryId], references: [id])
  subCategoryId String             @db.Uuid
  variants      ProductVariant[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("products")
}

model ProductVariant {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name     String @default("")
  image    String @default("")
  quantity Float?
  unit     Unit?

  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("product_variants")
}

model ProductBrand {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name        String @unique
  description String @default("")

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("product_brands")
}

model ProductCategory {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name String @unique

  subCategories ProductSubCategory[]
  products      Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("product_categories")
}

model ProductSubCategory {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  technicalName   String
  descriptiveName String @unique
  description     String @default("")

  category   ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId String          @db.Uuid
  products   Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("product_sub_categories")
}
